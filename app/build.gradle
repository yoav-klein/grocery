/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'war'
    id 'org.hidetake.ssh' version '2.11.2'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.springframework:spring-jdbc:6.1.11'
    implementation 'org.springframework:spring-webmvc:6.1.1'
    implementation 'org.apache.tomcat:tomcat-servlet-api:10.1.24'
    implementation group: 'org.thymeleaf', name: 'thymeleaf-spring6', version: '3.1.2.RELEASE'
    
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

    testImplementation group: 'com.h2database', name: 'h2', version: '2.3.232'
    // these 2 are needed for the Validation bean in tests for some reason
    testImplementation 'jakarta.el:jakarta.el-api:6.0.0'
    testImplementation 'org.glassfish:jakarta.el:4.0.2'
    testImplementation 'org.springframework:spring-test:6.1.1'
    testImplementation libs.testng
   
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG {
        useDefaultListeners(true)
        println getListeners()
    }
}

tasks.register('deploy', Copy) {
    dependsOn 'war'

    from war.archiveFile
    into "C:\\apache-tomcat-10.1.24-windows-x64\\webapps"
}


/**  Deploy to remote server */

remotes {
  webServer {
    host = 'ec2-54-242-76-117.compute-1.amazonaws.com'
    user = 'ubuntu'
    identity = file('C:\\Users\\yoavk\\.secrets\\server.key')
  }
}

ssh.settings {
    knownHosts = allowAnyHosts
}

tasks.register('deployRemote') {
dependsOn 'war'
    ssh.run {
        session(remotes.webServer) {
        put from: war.archiveFile.get().getAsFile(), into: '/opt/tomcat/webapps/ROOT.war'
        }
    }
}
